{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/inoxwarrior/Harvest/harvest-FE/src/components/comments/CommentsPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentCard from \"./CommentCard\";\nimport CommentApi from \"..//../api/CommentApi\";\n\nfunction CommentsPage() {\n  _s();\n\n  const [comments, setComments] = useState([]);\n\n  const createComment = commentData => {\n    CommentApi.post(\"/comments\", commentData).then(response => setComments([...comments, response.data]));\n  };\n\n  const getAll = () => {\n    CommentApi.get(\"/comments\").then(response => setComments(response.data));\n  };\n\n  const deleteComment = comment => {\n    CommentApi.delete(\"/comments\" + comment.id).then(response => getAll());\n  };\n\n  const updateComment = updatedComment => {\n    CommentApi.get(\"/comments\", updatedComment).then(r => getAll());\n  };\n\n  useEffect(() => {\n    getAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewCommentForm, {\n      onSubmit: createComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(CommentCard, {\n      comment: comment,\n      onUpdateClick: updateComment,\n      onDeleteClick: deleteComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 42\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CommentsPage, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n\n_c = CommentsPage;\nexport default CommentsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentsPage\");","map":{"version":3,"sources":["/Users/inoxwarrior/Harvest/harvest-FE/src/components/comments/CommentsPage.jsx"],"names":["React","useEffect","useState","NewCommentForm","CommentCard","CommentApi","CommentsPage","comments","setComments","createComment","commentData","post","then","response","data","getAll","get","deleteComment","comment","delete","id","updateComment","updatedComment","r","map"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMO,aAAa,GAAIC,WAAD,IAAe;AACjCL,IAAAA,UAAU,CAACM,IAAX,CAAgB,WAAhB,EAA6BD,WAA7B,EACKE,IADL,CACWC,QAAD,IAAaL,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAaM,QAAQ,CAACC,IAAtB,CAAD,CADlC;AAEC,GAHL;;AAKA,QAAMC,MAAM,GAAG,MAAM;AACjBV,IAAAA,UAAU,CAACW,GAAX,CAAe,WAAf,EACCJ,IADD,CACMC,QAAQ,IAAIL,WAAW,CAACK,QAAQ,CAACC,IAAV,CAD7B;AAEH,GAHD;;AAKA,QAAMG,aAAa,GAAIC,OAAD,IAAa;AAC/Bb,IAAAA,UAAU,CAACc,MAAX,CAAkB,cAAcD,OAAO,CAACE,EAAxC,EACKR,IADL,CACUC,QAAQ,IAAIE,MAAM,EAD5B;AAEH,GAHD;;AAKA,QAAMM,aAAa,GAAIC,cAAD,IAAoB;AACtCjB,IAAAA,UAAU,CAACW,GAAX,CAAe,WAAf,EAA4BM,cAA5B,EACKV,IADL,CACUW,CAAC,IAAIR,MAAM,EADrB;AAEH,GAHD;;AAKAd,EAAAA,SAAS,CAAC,MAAI;AACVc,IAAAA,MAAM;AACT,GAFQ,EAEP,EAFO,CAAT;AAKA,sBACI;AAAA,4BACI,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAGN;AAA3B;AAAA;AAAA;AAAA;AAAA,YADJ,EAGQF,QAAQ,CAACiB,GAAT,CAAaN,OAAO,iBAAK,QAAC,WAAD;AACrB,MAAA,OAAO,EAAEA,OADY;AAErB,MAAA,aAAa,EAAEG,aAFM;AAGrB,MAAA,aAAa,EAAEJ;AAHM;AAAA;AAAA;AAAA;AAAA,YAAzB,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAxCQX,Y;;KAAAA,Y;AA0CT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentCard from \"./CommentCard\";\nimport CommentApi from \"..//../api/CommentApi\";\n\nfunction CommentsPage() {\n    const [comments, setComments] = useState([]);\n    \n    const createComment = (commentData)=>{\n        CommentApi.post(\"/comments\", commentData)\n            .then((response)=> setComments([...comments,response.data]));\n        };    \n    \n    const getAll = () => {\n        CommentApi.get(\"/comments\")\n        .then(response => setComments(response.data));\n    }\n\n    const deleteComment = (comment) => {\n        CommentApi.delete(\"/comments\" + comment.id)\n            .then(response => getAll());\n    }\n\n    const updateComment = (updatedComment) => {\n        CommentApi.get(\"/comments\", updatedComment)\n            .then(r => getAll());\n    }\n\n    useEffect(()=>{\n        getAll();\n    },[])\n\n    \n    return (\n        <div>\n            <NewCommentForm onSubmit ={createComment}/>\n            {\n                comments.map(comment => (<CommentCard\n                    comment={comment}\n                    onUpdateClick={updateComment}\n                    onDeleteClick={deleteComment} />))\n            }\n        </div>\n    )\n\n}\n\nexport default CommentsPage;"]},"metadata":{},"sourceType":"module"}