{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/inoxwarrior/Harvest/harvest-FE/src/components/comments/CommentsPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport NewCommentForm from './NewCommentForm';\nimport CommentCard from './CommentCard';\nimport Api from '../../api/Api';\nimport CommentApi from '..//../api/CommentApi';\n\nfunction CommentsPage() {\n  _s();\n\n  const [comments, setComments] = useState([]);\n\n  const createComment = commentData => {\n    Api.post('/comments', commentData).then(response => setComments([...comments, response.data]));\n  };\n\n  const getAll = () => {\n    Api.get('/comments').then(response => setComments(response.data));\n  };\n\n  const deleteComment = id => {\n    Api.delete('/comments/' + id).then(response => getAll());\n  };\n\n  const updateComment = updatedComment => {\n    CommentApi.updateComment('/comments', updatedComment).then(r => getAll());\n  };\n\n  useEffect(() => {\n    getAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-card\",\n    children: [/*#__PURE__*/_jsxDEV(NewCommentForm, {\n      onSubmit: createComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(CommentCard, {\n      comment: comment,\n      onUpdateCick: updateComment,\n      onDeleteClick: deleteComment\n    }, comment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CommentsPage, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n\n_c = CommentsPage;\nexport default CommentsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentsPage\");","map":{"version":3,"sources":["/Users/inoxwarrior/Harvest/harvest-FE/src/components/comments/CommentsPage.jsx"],"names":["React","useEffect","useState","NewCommentForm","CommentCard","Api","CommentApi","CommentsPage","comments","setComments","createComment","commentData","post","then","response","data","getAll","get","deleteComment","id","delete","updateComment","updatedComment","r","map","comment"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMQ,aAAa,GAAGC,WAAW,IAAI;AACnCN,IAAAA,GAAG,CAACO,IAAJ,CAAS,WAAT,EAAsBD,WAAtB,EAAmCE,IAAnC,CAAwCC,QAAQ,IAC9CL,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcM,QAAQ,CAACC,IAAvB,CAAD,CADb;AAGD,GAJD;;AAMA,QAAMC,MAAM,GAAG,MAAM;AACnBX,IAAAA,GAAG,CAACY,GAAJ,CAAQ,WAAR,EAAqBJ,IAArB,CAA0BC,QAAQ,IAAIL,WAAW,CAACK,QAAQ,CAACC,IAAV,CAAjD;AACD,GAFD;;AAIA,QAAMG,aAAa,GAAGC,EAAE,IAAI;AAC1Bd,IAAAA,GAAG,CAACe,MAAJ,CAAW,eAAeD,EAA1B,EAA8BN,IAA9B,CAAmCC,QAAQ,IAAIE,MAAM,EAArD;AACD,GAFD;;AAIA,QAAMK,aAAa,GAAGC,cAAc,IAAI;AACtChB,IAAAA,UAAU,CAACe,aAAX,CAAyB,WAAzB,EAAsCC,cAAtC,EAAsDT,IAAtD,CAA2DU,CAAC,IAAIP,MAAM,EAAtE;AACD,GAFD;;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,MAAM;AACP,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEN;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,QAAQ,CAACgB,GAAT,CAAaC,OAAO,iBACnB,QAAC,WAAD;AACE,MAAA,OAAO,EAAEA,OADX;AAGE,MAAA,YAAY,EAAEJ,aAHhB;AAIE,MAAA,aAAa,EAAEH;AAJjB,OAEOO,OAAO,CAACN,EAFf;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAtCQZ,Y;;KAAAA,Y;AAwCT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport NewCommentForm from './NewCommentForm';\nimport CommentCard from './CommentCard';\nimport Api from '../../api/Api';\nimport CommentApi from '..//../api/CommentApi';\n\nfunction CommentsPage() {\n  const [comments, setComments] = useState([]);\n\n  const createComment = commentData => {\n    Api.post('/comments', commentData).then(response =>\n      setComments([...comments, response.data])\n    );\n  };\n\n  const getAll = () => {\n    Api.get('/comments').then(response => setComments(response.data));\n  };\n\n  const deleteComment = id => {\n    Api.delete('/comments/' + id).then(response => getAll());\n  };\n\n  const updateComment = updatedComment => {\n    CommentApi.updateComment('/comments', updatedComment).then(r => getAll());\n  };\n\n  useEffect(() => {\n    getAll();\n  }, []);\n\n  return (\n    <div className=\"comment-card\">\n      <NewCommentForm onSubmit={createComment} />\n      {comments.map(comment => (\n        <CommentCard\n          comment={comment}\n          key={comment.id}\n          onUpdateCick={updateComment}\n          onDeleteClick={deleteComment}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default CommentsPage;\n"]},"metadata":{},"sourceType":"module"}