{"ast":null,"code":"import AuthApi from '../api/AuthApi';\nconst tokenKey = '_token'; // Disclaimer: This simple auth implementation is for development purposes only.\n\nclass Auth {\n  constructor() {\n    this.setLoggedIn = () => {};\n  }\n\n  isLoggedIn() {\n    return this._getToken() != null;\n  }\n\n  async login(loginData) {\n    return await this._loginOrRegister(AuthApi.authenticate, loginData);\n  }\n\n  async register(registrationData) {\n    return await this._loginOrRegister(AuthApi.register, registrationData);\n  }\n\n  logout() {\n    this.setLoggedIn(false);\n\n    this._clearToken();\n  }\n\n  bindLoggedInStateSetter(loggedInStateSetter) {\n    this.setLoggedIn = loggedInStateSetter;\n  }\n\n  getAuthorizationHeader() {\n    return 'Bearer ' + this._getToken();\n  }\n\n  async _loginOrRegister(action, data) {\n    try {\n      const response = await action(data);\n\n      this._setToken(response.data.token);\n\n      this.setLoggedIn(true);\n      this.getEmail();\n      return true;\n    } catch (e) {\n      console.error(e);\n      this.setLoggedIn(false);\n      return false;\n    }\n  }\n\n  async getEmail() {\n    try {\n      const response = await AuthApi.getEmail();\n\n      this._setUserEmail(response.data);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  _getToken() {\n    return window.sessionStorage.getItem(tokenKey);\n  }\n\n  _setToken(token) {\n    window.sessionStorage.setItem(tokenKey, token);\n  }\n\n  _clearToken() {\n    window.sessionStorage.removeItem(tokenKey);\n  }\n\n  _setUserEmail(email) {\n    window.sessionStorage.setItem('userEmail', email);\n  }\n\n}\n\nexport default new Auth();","map":{"version":3,"sources":["/Users/inoxwarrior/Harvest/harvest-FE/src/services/Auth.js"],"names":["AuthApi","tokenKey","Auth","setLoggedIn","isLoggedIn","_getToken","login","loginData","_loginOrRegister","authenticate","register","registrationData","logout","_clearToken","bindLoggedInStateSetter","loggedInStateSetter","getAuthorizationHeader","action","data","response","_setToken","token","getEmail","e","console","error","_setUserEmail","log","window","sessionStorage","getItem","setItem","removeItem","email"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;AAEA,MAAMC,QAAQ,GAAG,QAAjB,C,CAEA;;AAEA,MAAMC,IAAN,CAAW;AAAA;AAAA,SACTC,WADS,GACK,MAAM,CAAE,CADb;AAAA;;AAGTC,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKC,SAAL,MAAoB,IAA3B;AACD;;AAED,QAAMC,KAAN,CAAYC,SAAZ,EAAuB;AACrB,WAAO,MAAM,KAAKC,gBAAL,CAAsBR,OAAO,CAACS,YAA9B,EAA4CF,SAA5C,CAAb;AACD;;AAED,QAAMG,QAAN,CAAeC,gBAAf,EAAiC;AAC/B,WAAO,MAAM,KAAKH,gBAAL,CAAsBR,OAAO,CAACU,QAA9B,EAAwCC,gBAAxC,CAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,SAAKT,WAAL,CAAiB,KAAjB;;AACA,SAAKU,WAAL;AACD;;AAEDC,EAAAA,uBAAuB,CAACC,mBAAD,EAAsB;AAC3C,SAAKZ,WAAL,GAAmBY,mBAAnB;AACD;;AAEDC,EAAAA,sBAAsB,GAAG;AACvB,WAAO,YAAY,KAAKX,SAAL,EAAnB;AACD;;AAED,QAAMG,gBAAN,CAAuBS,MAAvB,EAA+BC,IAA/B,EAAqC;AACnC,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,IAAD,CAA7B;;AACA,WAAKE,SAAL,CAAeD,QAAQ,CAACD,IAAT,CAAcG,KAA7B;;AACA,WAAKlB,WAAL,CAAiB,IAAjB;AACA,WAAKmB,QAAL;AACA,aAAO,IAAP;AACD,KAND,CAME,OAAOC,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,WAAKpB,WAAL,CAAiB,KAAjB;AACA,aAAO,KAAP;AACD;AACF;;AAED,QAAMmB,QAAN,GAAiB;AACf,QAAI;AACF,YAAMH,QAAQ,GAAG,MAAMnB,OAAO,CAACsB,QAAR,EAAvB;;AACA,WAAKI,aAAL,CAAmBP,QAAQ,CAACD,IAA5B;AACD,KAHD,CAGE,OAAOK,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACG,GAAR,CAAYJ,CAAZ;AACD;AACF;;AAEDlB,EAAAA,SAAS,GAAG;AACV,WAAOuB,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B7B,QAA9B,CAAP;AACD;;AAEDmB,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACfO,IAAAA,MAAM,CAACC,cAAP,CAAsBE,OAAtB,CAA8B9B,QAA9B,EAAwCoB,KAAxC;AACD;;AAEDR,EAAAA,WAAW,GAAG;AACZe,IAAAA,MAAM,CAACC,cAAP,CAAsBG,UAAtB,CAAiC/B,QAAjC;AACD;;AAEDyB,EAAAA,aAAa,CAACO,KAAD,EAAQ;AACnBL,IAAAA,MAAM,CAACC,cAAP,CAAsBE,OAAtB,CAA8B,WAA9B,EAA2CE,KAA3C;AACD;;AAjEQ;;AAoEX,eAAe,IAAI/B,IAAJ,EAAf","sourcesContent":["import AuthApi from '../api/AuthApi';\n\nconst tokenKey = '_token';\n\n// Disclaimer: This simple auth implementation is for development purposes only.\n\nclass Auth {\n  setLoggedIn = () => {};\n\n  isLoggedIn() {\n    return this._getToken() != null;\n  }\n\n  async login(loginData) {\n    return await this._loginOrRegister(AuthApi.authenticate, loginData);\n  }\n\n  async register(registrationData) {\n    return await this._loginOrRegister(AuthApi.register, registrationData);\n  }\n\n  logout() {\n    this.setLoggedIn(false);\n    this._clearToken();\n  }\n\n  bindLoggedInStateSetter(loggedInStateSetter) {\n    this.setLoggedIn = loggedInStateSetter;\n  }\n\n  getAuthorizationHeader() {\n    return 'Bearer ' + this._getToken();\n  }\n\n  async _loginOrRegister(action, data) {\n    try {\n      const response = await action(data);\n      this._setToken(response.data.token);\n      this.setLoggedIn(true);\n      this.getEmail();\n      return true;\n    } catch (e) {\n      console.error(e);\n      this.setLoggedIn(false);\n      return false;\n    }\n  }\n\n  async getEmail() {\n    try {\n      const response = await AuthApi.getEmail();\n      this._setUserEmail(response.data);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  _getToken() {\n    return window.sessionStorage.getItem(tokenKey);\n  }\n\n  _setToken(token) {\n    window.sessionStorage.setItem(tokenKey, token);\n  }\n\n  _clearToken() {\n    window.sessionStorage.removeItem(tokenKey);\n  }\n\n  _setUserEmail(email) {\n    window.sessionStorage.setItem('userEmail', email);\n  }\n}\n\nexport default new Auth();\n"]},"metadata":{},"sourceType":"module"}