{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/inoxwarrior/Harvest/harvest-FE/src/components/comments/CommentsPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport CommentApi from '..//../api/CommentApi';\nimport CommentCard from './CommentCard';\nimport NewCommentForm from './NewCommentForm';\n\nfunction CommentsPage() {\n  _s();\n\n  const [comments, setComments] = useState([]);\n\n  const createComment = async body => {\n    CommentApi.createComment(body).then(response => setComments([...comments, response.data]));\n  };\n\n  useEffect(async () => {\n    const source = CommentApi.getAllComments().then(response => {\n      const data = response.data;\n      setComments(data);\n    }).catch(err => console.log(err));\n  }, []);\n  const commentsCards = comments.map(item => {\n    return /*#__PURE__*/_jsxDEV(CommentCard, {\n      data: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CommentForm, {\n        onSubmit: createComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Show comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), commentsCards]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CommentsPage, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n\n_c = CommentsPage;\nexport default CommentsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentsPage\");","map":{"version":3,"sources":["/Users/inoxwarrior/Harvest/harvest-FE/src/components/comments/CommentsPage.jsx"],"names":["React","useEffect","useState","CommentApi","CommentCard","NewCommentForm","CommentsPage","comments","setComments","createComment","body","then","response","data","source","getAllComments","catch","err","console","log","commentsCards","map","item","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAIA,SAASC,YAAT,GAAwB;AAAA;;AACpB,QAAK,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAvC;;AAEA,QAAMO,aAAa,GAAG,MAAOC,IAAP,IAAgB;AAClCP,IAAAA,UAAU,CAACM,aAAX,CAAyBC,IAAzB,EAA+BC,IAA/B,CAAoCC,QAAQ,IAAGJ,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcK,QAAQ,CAACC,IAAvB,CAAD,CAA1D;AACH,GAFD;;AAIAZ,EAAAA,SAAS,CAAE,YAAW;AAClB,UAAMa,MAAM,GAAGX,UAAU,CAACY,cAAX,GACdJ,IADc,CACTC,QAAQ,IAAI;AACd,YAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACAL,MAAAA,WAAW,CAACK,IAAD,CAAX;AACH,KAJc,EAKdG,KALc,CAKRC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALC,CAAf;AAMP,GAPY,EAOV,EAPU,CAAT;AASJ,QAAMG,aAAa,GAAGb,QAAQ,CAACc,GAAT,CAAcC,IAAD,IAAU;AACzC,wBAAO,QAAC,WAAD;AAA6B,MAAA,IAAI,EAAIA;AAArC,OAAoBA,IAAI,CAACC,EAAzB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFqB,CAAtB;AAIA,sBACI;AAAA,4BACI;AAAA,6BACI,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAEd;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,EAKKW,aALL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUC;;GA9BQd,Y;;KAAAA,Y;AAgCT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport CommentApi from '..//../api/CommentApi';\nimport CommentCard from './CommentCard';\nimport NewCommentForm from './NewCommentForm';\n\n\n\nfunction CommentsPage() {\n    const[comments, setComments] = useState([]);\n\n    const createComment = async (body) => {\n        CommentApi.createComment(body).then(response=> setComments([...comments, response.data]));\n    };\n\n    useEffect( async ()=> {\n        const source = CommentApi.getAllComments()\n        .then(response => {\n            const data = response.data;\n            setComments(data);\n        })\n        .catch(err => console.log(err));\n}, []);\n    \nconst commentsCards = comments.map((item) => {\n    return <CommentCard key = {item.id} data = {item}/>\n});\n\nreturn (\n    <div >\n        <div>\n            <CommentForm onSubmit={createComment}/>\n        </div>\n        <p>Show comments</p>\n        {commentsCards}\n    </div>\n);\n\n}\n\nexport default CommentsPage;"]},"metadata":{},"sourceType":"module"}