{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/inoxwarrior/Harvest/harvest-FE/src/components/comments/NewCommentForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Api from '../../api/Api';\nexport default function NewCommentForm() {\n  _s();\n\n  const [authorName, setAuthorName] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  const onSubmit = () => {\n    const requestBody = {\n      authorName,\n      body\n    };\n    Api.post(\"/comments\", requestBody).then(response => console.log(response));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" New Comment \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"type here\",\n      value: body,\n      onChange: event => setBody(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" User \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"type here\",\n      value: authorName,\n      onChange: event => setAuthorName(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onSubmit({\n        body\n      }),\n      children: \"Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewCommentForm, \"T/GZWRVvs1musc0wEFxWqGV9l7Y=\");\n\n_c = NewCommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewCommentForm\");","map":{"version":3,"sources":["/Users/inoxwarrior/Harvest/harvest-FE/src/components/comments/NewCommentForm.jsx"],"names":["React","useEffect","useState","Api","NewCommentForm","authorName","setAuthorName","body","setBody","onSubmit","requestBody","post","then","response","console","log","event","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,eAAhB;AAGA,eAAe,SAASC,cAAT,GAAyB;AAAA;;AACpC,QAAK,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMO,QAAQ,GAAG,MAAI;AACjB,UAAMC,WAAW,GAAG;AAAEL,MAAAA,UAAF;AAAcE,MAAAA;AAAd,KAApB;AACAJ,IAAAA,GAAG,CAACQ,IAAJ,CAAS,WAAT,EAAsBD,WAAtB,EACKE,IADL,CACWC,QAAD,IAAaC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CADvB;AAEC,GAJL;;AAMA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACA,MAAA,WAAW,EAAC,WADZ;AAEA,MAAA,KAAK,EAAGN,IAFR;AAGA,MAAA,QAAQ,EAAIS,KAAK,IAAIR,OAAO,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd;AAH5B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPA,eAQI;AACA,MAAA,WAAW,EAAC,WADZ;AAEA,MAAA,KAAK,EAAGb,UAFR;AAGA,MAAA,QAAQ,EAAIW,KAAK,IAAIV,aAAa,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd;AAHlC;AAAA;AAAA;AAAA;AAAA,YARJ,eAaI;AAAQ,MAAA,OAAO,EAAG,MAAKT,QAAQ,CAAC;AAACF,QAAAA;AAAD,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GA7BuBH,c;;KAAAA,c","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Api from '../../api/Api';\n\n\nexport default function NewCommentForm(){\n    const[authorName, setAuthorName] = useState(\"\")\n    const [body, setBody] = useState(\"\");\n\n    const onSubmit = ()=>{\n        const requestBody = { authorName, body};\n        Api.post(\"/comments\", requestBody)\n            .then((response)=> console.log(response));\n        };    \n\n    return (\n        <div>\n            <label> New Comment </label>\n            <textarea\n            placeholder=\"type here\"\n            value= {body}\n            onChange = {event => setBody(event.target.value)}/>\n\n        <label> User </label>\n            <textarea\n            placeholder=\"type here\"\n            value= {authorName}\n            onChange = {event => setAuthorName(event.target.value)}/>\n\n            <button onClick= {()=> onSubmit({body})}>\n                Comment\n    </button>\n        </div> \n    )\n}"]},"metadata":{},"sourceType":"module"}