{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/inoxwarrior/Harvest/harvest-FE/src/components/comments/CommentsPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentsList from \"./CommentsList\";\nimport Api from \"../../api/Api\";\nimport { getAllByAltText } from \"@testing-library/react\";\n\nfunction CommentsPage() {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    Api.get(\"/comments\").then(r => setComments(r.data));\n  }, []);\n\n  const createComment = commentData => {\n    Api.post(\"/comments\", commentData).then(response => window.location.reload());\n  };\n\n  const deleteComment = comment => {\n    Api.delete(\"/comments\" + comment.id).then(response => getAll());\n  };\n\n  useEffect(() => {\n    getAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewCommentForm, {\n      onSubmit: createComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CommentsPage, \"Gb0IamD7JIldgnM2007Mizf1VNM=\");\n\n_c = CommentsPage;\nexport default CommentsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentsPage\");","map":{"version":3,"sources":["/Users/inoxwarrior/Harvest/harvest-FE/src/components/comments/CommentsPage.jsx"],"names":["React","useEffect","useState","NewCommentForm","CommentsList","Api","getAllByAltText","CommentsPage","comments","setComments","get","then","r","data","createComment","commentData","post","response","window","location","reload","deleteComment","comment","delete","id","getAll"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,SAASC,eAAT,QAAgC,wBAAhC;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACAD,EAAAA,SAAS,CAAE,MAAK;AACZI,IAAAA,GAAG,CAACK,GAAJ,CAAQ,WAAR,EACCC,IADD,CACOC,CAAD,IAAMH,WAAW,CAACG,CAAC,CAACC,IAAH,CADvB;AAEH,GAHQ,EAGN,EAHM,CAAT;;AAIA,QAAMC,aAAa,GAAIC,WAAD,IAAe;AACjCV,IAAAA,GAAG,CAACW,IAAJ,CAAS,WAAT,EAAsBD,WAAtB,EACKJ,IADL,CACWM,QAAD,IAAaC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EADvB;AAEC,GAHL;;AAKA,QAAMC,aAAa,GAAIC,OAAD,IAAa;AAC/BjB,IAAAA,GAAG,CAACkB,MAAJ,CAAW,cAAcD,OAAO,CAACE,EAAjC,EACKb,IADL,CACUM,QAAQ,IAAIQ,MAAM,EAD5B;AAEH,GAHD;;AAKAxB,EAAAA,SAAS,CAAC,MAAI;AACVwB,IAAAA,MAAM;AACT,GAFQ,EAEP,EAFO,CAAT;AAGA,sBACI;AAAA,4BACI,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAGX;AAA3B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAIN;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA1BQD,Y;;KAAAA,Y;AA4BT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentsList from \"./CommentsList\";\nimport Api from \"../../api/Api\";\nimport { getAllByAltText } from \"@testing-library/react\";\n\nfunction CommentsPage() {\n    const [comments, setComments] = useState([]);\n    useEffect (()=> {\n        Api.get(\"/comments\")\n        .then((r)=> setComments(r.data))\n    }, [])\n    const createComment = (commentData)=>{\n        Api.post(\"/comments\", commentData)\n            .then((response)=> window.location.reload());\n        };    \n\n    const deleteComment = (comment) => {\n        Api.delete(\"/comments\" + comment.id)\n            .then(response => getAll());\n    }\n\n    useEffect(()=>{\n        getAll();\n    },[])\n    return (\n        <div>\n            <NewCommentForm onSubmit ={createComment}/>\n            <CommentsList comments = {comments}/>\n        </div>\n    )\n\n}\n\nexport default CommentsPage;"]},"metadata":{},"sourceType":"module"}