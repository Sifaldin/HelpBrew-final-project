{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/inoxwarrior/Harvest/harvest-FE/src/components/comments/CommentsPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentCard from \"./CommentCard\";\nimport Api from \"../../api/Api\";\n\nfunction CommentsPage() {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    Api.get(\"/comments\").then(r => setComments(r.data));\n  }, []);\n\n  const createComment = commentData => {\n    Api.post(\"/comments\", commentData).then(response => setComments([...comments, response.data]));\n  };\n\n  const getAll = () => {\n    Api.get(\"/comments\").then(res => setComments(response.data));\n  };\n\n  const deleteComment = comment => {\n    Api.delete(\"/comments\" + comment.id).then(response => getAll());\n  };\n\n  useEffect(() => {\n    getAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewCommentForm, {\n      onSubmit: createComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(CommentCard, {\n      comment: comment,\n      onUpdateCLick: updateComment,\n      onDeleteClick: deleteComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 42\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CommentsPage, \"Gb0IamD7JIldgnM2007Mizf1VNM=\");\n\n_c = CommentsPage;\nexport default CommentsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentsPage\");","map":{"version":3,"sources":["/Users/inoxwarrior/Harvest/harvest-FE/src/components/comments/CommentsPage.jsx"],"names":["React","useEffect","useState","NewCommentForm","CommentCard","Api","CommentsPage","comments","setComments","get","then","r","data","createComment","commentData","post","response","getAll","res","deleteComment","comment","delete","id","map","updateComment"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,GAAP,MAAgB,eAAhB;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACAD,EAAAA,SAAS,CAAE,MAAK;AACZI,IAAAA,GAAG,CAACI,GAAJ,CAAQ,WAAR,EACCC,IADD,CACOC,CAAD,IAAMH,WAAW,CAACG,CAAC,CAACC,IAAH,CADvB;AAEH,GAHQ,EAGN,EAHM,CAAT;;AAMA,QAAMC,aAAa,GAAIC,WAAD,IAAe;AACjCT,IAAAA,GAAG,CAACU,IAAJ,CAAS,WAAT,EAAsBD,WAAtB,EACKJ,IADL,CACWM,QAAD,IAAaR,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAaS,QAAQ,CAACJ,IAAtB,CAAD,CADlC;AAEC,GAHL;;AAKA,QAAMK,MAAM,GAAG,MAAM;AACjBZ,IAAAA,GAAG,CAACI,GAAJ,CAAQ,WAAR,EACCC,IADD,CACMQ,GAAG,IAAIV,WAAW,CAACQ,QAAQ,CAACJ,IAAV,CADxB;AAEH,GAHD;;AAKA,QAAMO,aAAa,GAAIC,OAAD,IAAa;AAC/Bf,IAAAA,GAAG,CAACgB,MAAJ,CAAW,cAAcD,OAAO,CAACE,EAAjC,EACKZ,IADL,CACUM,QAAQ,IAAIC,MAAM,EAD5B;AAEH,GAHD;;AAKAhB,EAAAA,SAAS,CAAC,MAAI;AACVgB,IAAAA,MAAM;AACT,GAFQ,EAEP,EAFO,CAAT;AAKA,sBACI;AAAA,4BACI,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAGJ;AAA3B;AAAA;AAAA;AAAA;AAAA,YADJ,EAGQN,QAAQ,CAACgB,GAAT,CAAaH,OAAO,iBAAK,QAAC,WAAD;AACrB,MAAA,OAAO,EAAEA,OADY;AAErB,MAAA,aAAa,EAAEI,aAFM;AAGrB,MAAA,aAAa,EAAEL;AAHM;AAAA;AAAA;AAAA;AAAA,YAAzB,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAxCQb,Y;;KAAAA,Y;AA0CT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentCard from \"./CommentCard\";\nimport Api from \"../../api/Api\";\n\nfunction CommentsPage() {\n    const [comments, setComments] = useState([]);\n    useEffect (()=> {\n        Api.get(\"/comments\")\n        .then((r)=> setComments(r.data))\n    }, [])\n\n\n    const createComment = (commentData)=>{\n        Api.post(\"/comments\", commentData)\n            .then((response)=> setComments([...comments,response.data]));\n        };    \n    \n    const getAll = () => {\n        Api.get(\"/comments\")\n        .then(res => setComments(response.data));\n    }\n\n    const deleteComment = (comment) => {\n        Api.delete(\"/comments\" + comment.id)\n            .then(response => getAll());\n    }\n\n    useEffect(()=>{\n        getAll();\n    },[])\n\n    \n    return (\n        <div>\n            <NewCommentForm onSubmit ={createComment}/>\n            {\n                comments.map(comment => (<CommentCard\n                    comment={comment}\n                    onUpdateCLick={updateComment}\n                    onDeleteClick={deleteComment} />))\n            }\n        </div>\n    )\n\n}\n\nexport default CommentsPage;"]},"metadata":{},"sourceType":"module"}