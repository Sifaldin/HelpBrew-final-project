{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/inoxwarrior/Harvest/harvest-FE/src/components/posts/SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { atob } from 'js-base64';\nimport { useLocation } from 'react-router-dom';\nimport ErrorScreen from '../tempscreens/ErrorScreen';\nimport PostsApi from '../../api/PostsApi';\n\nfunction SinglePost() {\n  _s();\n\n  const tokenKey = window.sessionStorage.getItem('_token');\n  const {\n    state\n  } = useLocation();\n  const passedPost = state === undefined ? null : state.post;\n  const [post, setPost] = useState(passedPost);\n\n  const handleClick = () => {\n    const setClaimed = async () => {\n      try {\n        const response = await PostsApi.updatePost({ ...post,\n          claimed: !post.claimed\n        });\n        setPost(response.data);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    setClaimed();\n  };\n\n  try {\n    const isPoster = atob(tokenKey).includes(post.email);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card single-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: post.claimed ? 'Claimed' : 'Available'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"card-img-top\",\n        src: post.imageUrl,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-of-card\",\n          children: [isPoster ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClick,\n            type: \"button\",\n            className: \"btn btn-warning\",\n            children: post.claimed ? 'Set Available' : 'Set Claimed'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: post.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  } catch (e) {\n    console.log(e);\n    return /*#__PURE__*/_jsxDEV(ErrorScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(SinglePost, \"52Z0zAJYcCnhX7irMcLMRYs2CAI=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\nexport default SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/Users/inoxwarrior/Harvest/harvest-FE/src/components/posts/SinglePost.jsx"],"names":["React","useState","atob","useLocation","ErrorScreen","PostsApi","SinglePost","tokenKey","window","sessionStorage","getItem","state","passedPost","undefined","post","setPost","handleClick","setClaimed","response","updatePost","claimed","data","e","console","log","isPoster","includes","email","imageUrl","title","body","date"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,QAAP,MAAqB,oBAArB;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAMC,QAAQ,GAAGC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,QAA9B,CAAjB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYR,WAAW,EAA7B;AACA,QAAMS,UAAU,GAAGD,KAAK,KAAKE,SAAV,GAAsB,IAAtB,GAA6BF,KAAK,CAACG,IAAtD;AACA,QAAM,CAACA,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAACW,UAAD,CAAhC;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACxB,UAAMC,UAAU,GAAG,YAAY;AAC7B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMb,QAAQ,CAACc,UAAT,CAAoB,EAAE,GAAGL,IAAL;AAAWM,UAAAA,OAAO,EAAE,CAACN,IAAI,CAACM;AAA1B,SAApB,CAAvB;AACAL,QAAAA,OAAO,CAACG,QAAQ,CAACG,IAAV,CAAP;AACD,OAHD,CAGE,OAAOC,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,KAPD;;AAQAL,IAAAA,UAAU;AACX,GAVD;;AAYA,MAAI;AACF,UAAMQ,QAAQ,GAAGvB,IAAI,CAACK,QAAD,CAAJ,CAAemB,QAAf,CAAwBZ,IAAI,CAACa,KAA7B,CAAjB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBAA8Bb,IAAI,CAACM,OAAL,GAAe,SAAf,GAA2B;AAAzD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,GAAG,EAAEN,IAAI,CAACc,QAAxC;AAAkD,QAAA,GAAG,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4Bd,IAAI,CAACe;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,oBAA0Bf,IAAI,CAACgB;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,qBACGL,QAAQ,gBACP;AAAQ,YAAA,OAAO,EAAET,WAAjB;AAA8B,YAAA,IAAI,EAAC,QAAnC;AAA4C,YAAA,SAAS,EAAC,iBAAtD;AAAA,sBACGF,IAAI,CAACM,OAAL,GAAe,eAAf,GAAiC;AADpC;AAAA;AAAA;AAAA;AAAA,kBADO,GAIL,IALN,eAME;AAAA,sBAAON,IAAI,CAACiB;AAAZ;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD,GApBD,CAoBE,OAAOT,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,wBAAO,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF;;GA1CQhB,U;UAEWH,W;;;KAFXG,U;AA2CT,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport { atob } from 'js-base64';\nimport { useLocation } from 'react-router-dom';\nimport ErrorScreen from '../tempscreens/ErrorScreen';\nimport PostsApi from '../../api/PostsApi';\n\nfunction SinglePost() {\n  const tokenKey = window.sessionStorage.getItem('_token');\n  const { state } = useLocation();\n  const passedPost = state === undefined ? null : state.post;\n  const [post, setPost] = useState(passedPost);\n\n  const handleClick = () => {\n    const setClaimed = async () => {\n      try {\n        const response = await PostsApi.updatePost({ ...post, claimed: !post.claimed });\n        setPost(response.data);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    setClaimed();\n  };\n\n  try {\n    const isPoster = atob(tokenKey).includes(post.email);\n    return (\n      <div className=\"card single-card\">\n        <div className=\"card-header\">{post.claimed ? 'Claimed' : 'Available'}</div>\n        <img className=\"card-img-top\" src={post.imageUrl} alt=\"\" />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{post.title}</h5>\n          <p className=\"card-text\">{post.body}</p>\n          <div className=\"bottom-of-card\">\n            {isPoster ? (\n              <button onClick={handleClick} type=\"button\" className=\"btn btn-warning\">\n                {post.claimed ? 'Set Available' : 'Set Claimed'}\n              </button>\n            ) : null}\n            <span>{post.date}</span>\n          </div>\n        </div>\n      </div>\n    );\n  } catch (e) {\n    console.log(e);\n    return <ErrorScreen />;\n  }\n}\nexport default SinglePost;\n"]},"metadata":{},"sourceType":"module"}