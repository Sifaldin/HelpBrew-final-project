{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/inoxwarrior/Harvest/harvest-FE/src/components/comments/CommentsPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentCard from \"./CommentCard\";\nimport CommentApi from \"..//../api/CommentApi\";\n\nfunction CommentsPage() {\n  _s();\n\n  const [comments, setComments] = useState([]);\n\n  const createComment = commentData => {\n    CommentApi.createComment(commentData).then(response => console.log(response));\n  };\n\n  const getAll = () => {\n    CommentApi.getAllComments(\"/comments\").then(response => setComments(response.data));\n  };\n\n  const deleteComment = comment => {\n    CommentApi.deleteComment(\"/comments\" + comment.id).then(response => getAll());\n  };\n\n  const updateComment = updatedComment => {\n    CommentApi.updateComment(\"/comments\", updatedComment).then(r => getAll());\n  };\n\n  useEffect(() => {\n    getAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewCommentForm, {\n      onSubmit: e => createComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(CommentCard, {\n      comment: comment,\n      onUpdateClick: updateComment,\n      onDeleteClick: deleteComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 42\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CommentsPage, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n\n_c = CommentsPage;\nexport default CommentsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentsPage\");","map":{"version":3,"sources":["/Users/inoxwarrior/Harvest/harvest-FE/src/components/comments/CommentsPage.jsx"],"names":["React","useEffect","useState","NewCommentForm","CommentCard","CommentApi","CommentsPage","comments","setComments","createComment","commentData","then","response","console","log","getAll","getAllComments","data","deleteComment","comment","id","updateComment","updatedComment","r","e","map"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMO,aAAa,GAAIC,WAAD,IAAe;AACjCL,IAAAA,UAAU,CAACI,aAAX,CAAyBC,WAAzB,EACKC,IADL,CACWC,QAAD,IACNC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CAFJ;AAGC,GAJL;;AAOA,QAAMG,MAAM,GAAG,MAAM;AACjBV,IAAAA,UAAU,CAACW,cAAX,CAA0B,WAA1B,EACCL,IADD,CACMC,QAAQ,IAAIJ,WAAW,CAACI,QAAQ,CAACK,IAAV,CAD7B;AAEH,GAHD;;AAKA,QAAMC,aAAa,GAAIC,OAAD,IAAa;AAC/Bd,IAAAA,UAAU,CAACa,aAAX,CAAyB,cAAcC,OAAO,CAACC,EAA/C,EACKT,IADL,CACUC,QAAQ,IAAIG,MAAM,EAD5B;AAEH,GAHD;;AAKA,QAAMM,aAAa,GAAIC,cAAD,IAAoB;AACtCjB,IAAAA,UAAU,CAACgB,aAAX,CAAyB,WAAzB,EAAsCC,cAAtC,EACKX,IADL,CACUY,CAAC,IAAIR,MAAM,EADrB;AAEH,GAHD;;AAKAd,EAAAA,SAAS,CAAC,MAAI;AACVc,IAAAA,MAAM;AACT,GAFQ,EAEP,EAFO,CAAT;AAKA,sBACI;AAAA,4BACI,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAGS,CAAD,IAAKf;AAA/B;AAAA;AAAA;AAAA;AAAA,YADJ,EAGQF,QAAQ,CAACkB,GAAT,CAAaN,OAAO,iBAAK,QAAC,WAAD;AACrB,MAAA,OAAO,EAAEA,OADY;AAErB,MAAA,aAAa,EAAEE,aAFM;AAGrB,MAAA,aAAa,EAAEH;AAHM;AAAA;AAAA;AAAA;AAAA,YAAzB,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA1CQZ,Y;;KAAAA,Y;AA4CT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentCard from \"./CommentCard\";\nimport CommentApi from \"..//../api/CommentApi\";\n\nfunction CommentsPage() {\n    const [comments, setComments] = useState([]);\n    \n    const createComment = (commentData)=>{\n        CommentApi.createComment(commentData)\n            .then((response)=> \n            console.log(response));\n        };    \n\n    \n    const getAll = () => {\n        CommentApi.getAllComments(\"/comments\")\n        .then(response => setComments(response.data));\n    }\n\n    const deleteComment = (comment) => {\n        CommentApi.deleteComment(\"/comments\" + comment.id)\n            .then(response => getAll());\n    }\n\n    const updateComment = (updatedComment) => {\n        CommentApi.updateComment(\"/comments\", updatedComment)\n            .then(r => getAll());\n    }\n\n    useEffect(()=>{\n        getAll();\n    },[])\n\n    \n    return (\n        <div>\n            <NewCommentForm onSubmit={(e)=>createComment} />\n            {\n                comments.map(comment => (<CommentCard\n                    comment={comment}\n                    onUpdateClick={updateComment}\n                    onDeleteClick={deleteComment} />))\n            }\n        </div>\n    )\n\n}\n\nexport default CommentsPage;"]},"metadata":{},"sourceType":"module"}