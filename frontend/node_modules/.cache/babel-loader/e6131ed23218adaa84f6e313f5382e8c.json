{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/inoxwarrior/Harvest/harvest-FE/src/components/chat/ThreadPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport ChatApi from '../../api/ChatApi';\nimport ChatPage from './ChatPage';\nimport Thread from './Thread';\n\nfunction ThreadPage() {\n  _s();\n\n  const [threads, setThreads] = useState([]);\n  const {\n    id\n  } = useParams();\n  const {\n    state\n  } = useLocation();\n  const locationState = state === null || state === undefined ? '' : state.thread;\n  const [messageBox, setMessageBox] = useState({\n    threadId: id,\n    thread: locationState\n  });\n  useEffect(() => {\n    const getThreads = async () => {\n      const response = await ChatApi.getAllThread();\n      setThreads(response.data);\n    };\n\n    getThreads();\n  }, []);\n  const listOfThreads = threads.map(thread => /*#__PURE__*/_jsxDEV(Thread, {\n    setMessageBox: setMessageBox,\n    thread: thread\n  }, thread.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messaging\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inbox_msg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inbox_people\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"headind_srch\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recent_heading\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Recent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"srch_bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stylish-input-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"search-bar\",\n                  placeholder: \"Search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inbox_chat scroll\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat_list active_chat\",\n              children: threads === [] ? 'loading...' : listOfThreads\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mesgs\",\n          children: messageBox.thread === '' ? null : /*#__PURE__*/_jsxDEV(ChatPage, {\n            id: messageBox.threadId,\n            thread: messageBox.thread\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ThreadPage, \"bEx17oVigmTnuO3+NDg1SIDD2Wg=\", false, function () {\n  return [useParams, useLocation];\n});\n\n_c = ThreadPage;\nexport default ThreadPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThreadPage\");","map":{"version":3,"sources":["/Users/inoxwarrior/Harvest/harvest-FE/src/components/chat/ThreadPage.jsx"],"names":["React","useEffect","useState","useLocation","useParams","ChatApi","ChatPage","Thread","ThreadPage","threads","setThreads","id","state","locationState","undefined","thread","messageBox","setMessageBox","threadId","getThreads","response","getAllThread","data","listOfThreads","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport ChatApi from '../../api/ChatApi';\nimport ChatPage from './ChatPage';\nimport Thread from './Thread';\n\nfunction ThreadPage() {\n  const [threads, setThreads] = useState([]);\n  const { id } = useParams();\n  const { state } = useLocation();\n  const locationState = state === null || state === undefined ? '' : state.thread;\n  const [messageBox, setMessageBox] = useState({ threadId: id, thread: locationState });\n\n  useEffect(() => {\n    const getThreads = async () => {\n      const response = await ChatApi.getAllThread();\n      setThreads(response.data);\n    };\n    getThreads();\n  }, []);\n\n  const listOfThreads = threads.map(thread => (\n    <Thread key={thread.id} setMessageBox={setMessageBox} thread={thread} />\n  ));\n  return (\n    <div>\n      <div className=\"messaging\">\n        <div className=\"inbox_msg\">\n          <div className=\"inbox_people\">\n            <div className=\"headind_srch\">\n              <div className=\"recent_heading\">\n                <h4>Recent</h4>\n              </div>\n              <div className=\"srch_bar\">\n                <div className=\"stylish-input-group\">\n                  <input type=\"text\" className=\"search-bar\" placeholder=\"Search\" />\n                </div>\n              </div>\n            </div>\n            <div className=\"inbox_chat scroll\">\n              <div className=\"chat_list active_chat\">\n                {threads === [] ? 'loading...' : listOfThreads}\n              </div>\n            </div>\n          </div>\n          <div className=\"mesgs\">\n            {messageBox.thread === '' ? null : (\n              <ChatPage id={messageBox.threadId} thread={messageBox.thread} />\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ThreadPage;\n"]},"metadata":{},"sourceType":"module"}