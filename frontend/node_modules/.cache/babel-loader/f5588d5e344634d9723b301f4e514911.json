{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/inoxwarrior/Harvest/harvest-FE/src/components/comments/CommentCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CommentUpdateForm from './CommentUpdateForm';\nimport CommentsPage from './CommentsPage';\nimport Api from '..//..//api/Api';\n\nfunction CommentCard({\n  comment,\n  onDeleteClick,\n  onUpdate\n}) {\n  _s();\n\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  const createComment = commentData => {\n    Api.post(\"/comments\", commentData).then(response => setComments([...comments, response.data]));\n  };\n\n  const handleUpdateClick = () => {\n    setIsUpdating(true);\n  };\n\n  return isUpdating ? /*#__PURE__*/_jsxDEV(CommentUpdateForm, {\n    onSubmit: createComment\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: comment.authorName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: comment.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDeleteClick(comment.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateClick,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CommentCard, \"Iu9QP35HOe9AU5k2QizHmZa0ji4=\");\n\n_c = CommentCard;\nexport default CommentCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentCard\");","map":{"version":3,"sources":["/Users/inoxwarrior/Harvest/harvest-FE/src/components/comments/CommentCard.jsx"],"names":["React","useState","CommentUpdateForm","CommentsPage","Api","CommentCard","comment","onDeleteClick","onUpdate","isUpdating","setIsUpdating","createComment","commentData","post","then","response","setComments","comments","data","handleUpdateClick","authorName","body","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AAEA,SAASC,WAAT,CAAqB;AAACC,EAAAA,OAAD;AAAUC,EAAAA,aAAV;AAAyBC,EAAAA;AAAzB,CAArB,EAAyD;AAAA;;AACrD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAE,KAAF,CAA5C;;AACA,QAAMU,aAAa,GAAIC,WAAD,IAAe;AACjCR,IAAAA,GAAG,CAACS,IAAJ,CAAS,WAAT,EAAsBD,WAAtB,EACKE,IADL,CACWC,QAAD,IAAaC,WAAW,CAAC,CAAC,GAAGC,QAAJ,EAAaF,QAAQ,CAACG,IAAtB,CAAD,CADlC;AAEC,GAHL;;AAKA,QAAMC,iBAAiB,GAAG,MAAM;AAC5BT,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAFD;;AAIA,SAAOD,UAAU,gBACjB,QAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAEE;AAA7B;AAAA;AAAA;AAAA;AAAA,UADiB,gBAEjB;AAAA,4BACI;AAAA,gBAAKL,OAAO,CAACc;AAAb;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKd,OAAO,CAACe;AAAb;AAAA;AAAA;AAAA;AAAA,YAFJ,eAIK;AAAA,8BACW;AAAS,QAAA,OAAO,EAAE,MAAMd,aAAa,CAACD,OAAO,CAACgB,EAAT,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADX,eAKW;AAAS,QAAA,OAAO,EAAEH,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALX;AAAA;AAAA;AAAA;AAAA;AAAA,YAJL;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA;AAiBH;;GA5BQd,W;;KAAAA,W;AA8BT,eAAeA,WAAf","sourcesContent":["import React, {useState} from 'react';\nimport CommentUpdateForm from './CommentUpdateForm';\nimport CommentsPage from './CommentsPage';\nimport Api from '..//..//api/Api';\n\nfunction CommentCard({comment, onDeleteClick, onUpdate}) {\n    const [isUpdating, setIsUpdating] = useState (false);\n    const createComment = (commentData)=>{\n        Api.post(\"/comments\", commentData)\n            .then((response)=> setComments([...comments,response.data]));\n        };   \n\n    const handleUpdateClick = () => {\n        setIsUpdating(true);\n    };\n\n    return isUpdating ?\n    <CommentUpdateForm onSubmit={createComment}/> :  \n    <div>\n        <h5>{comment.authorName}</h5>\n        <h4>{comment.body}</h4>\n\n         <div>\n                    <button  onClick={() => onDeleteClick(comment.id)}>\n                        Delete\n                </button>\n\n                    <button  onClick={handleUpdateClick}>\n                        Update\n                    </button>\n                </div>\n\n    </div>\n}\n\nexport default CommentCard;"]},"metadata":{},"sourceType":"module"}