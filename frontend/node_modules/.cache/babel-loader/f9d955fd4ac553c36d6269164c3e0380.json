{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/inoxwarrior/Harvest/harvest-FE/src/components/posts/SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { atob } from 'js-base64';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport ErrorScreen from '../tempscreens/ErrorScreen';\nimport PostsApi from '../../api/PostsApi';\nimport ChatApi from '../../api/ChatApi';\n\nfunction SinglePost() {\n  _s();\n\n  const tokenKey = window.sessionStorage.getItem('_token');\n  const {\n    state\n  } = useLocation();\n  const passedPost = state === undefined ? null : state.post;\n  const [post, setPost] = useState(passedPost);\n  const history = useHistory();\n\n  const handleClaim = () => {\n    const setClaimed = async () => {\n      try {\n        const response = await PostsApi.updatePost({ ...post,\n          claimed: !post.claimed\n        });\n        setPost(response.data);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    setClaimed();\n  };\n\n  const messageHandler = () => {\n    const createOrDirect = async () => {\n      try {\n        const response = await ChatApi.createThread(post.email, {});\n        console.log(response);\n        history.push(`/chat/${response.data.id}`);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    createOrDirect();\n  };\n\n  try {\n    const isPoster = atob(tokenKey).includes(post.email);\n    return (\n      /*#__PURE__*/\n\n      /*      <div className=\"card single-card\">\n             <div className=\"card-header\">{post.claimed ? 'Claimed' : 'Available'}</div>\n             <img className=\"card-img-top\" src={post.imageUrl} alt=\"\" />\n             <div className=\"card-body\">\n               <h5 className=\"card-title\">{post.title}</h5>\n               <p>{post.date}</p>\n               <p className=\"card-text\">{post.body}</p>\n                <div className=\"bottom-of-card\">\n                 {isPoster ? (\n                   <button onClick={handleClaim} type=\"button\" className=\"btn btn-warning\">\n                     {post.claimed ? 'Set Available' : 'Set Claimed'}\n                   </button>\n                 ) : null}\n                 {isPoster ? null : (\n                   <button type=\"button\" onClick={messageHandler} className=\"btn btn-primary\">\n                     Message Poster\n                   </button>\n                 )}\n               </div>\n             </div>\n           </div> */\n      _jsxDEV(\"div\", {\n        className: \"col-md-3 col-sm-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-grid4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-image4\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: post.claimed ? 'claimed pic-1' : 'pic-1',\n                src: post.imageUrl\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                className: post.claimed ? 'claimed pic-2' : 'pic-2',\n                src: post.imageUrl\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: post.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: post.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bottom-of-card\",\n              children: isPoster ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleClick,\n                type: \"button\",\n                className: \"btn btn-warning\",\n                children: post.claimed ? 'Set Available' : 'Set Claimed'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)\n    );\n  } catch (e) {\n    console.log(e);\n    return /*#__PURE__*/_jsxDEV(ErrorScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(SinglePost, \"TVJ980IwLyfUYCBguIP8QXvCor8=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = SinglePost;\nexport default SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/Users/inoxwarrior/Harvest/harvest-FE/src/components/posts/SinglePost.jsx"],"names":["React","useState","atob","useHistory","useLocation","ErrorScreen","PostsApi","ChatApi","SinglePost","tokenKey","window","sessionStorage","getItem","state","passedPost","undefined","post","setPost","history","handleClaim","setClaimed","response","updatePost","claimed","data","e","console","log","messageHandler","createOrDirect","createThread","email","push","id","isPoster","includes","imageUrl","title","date","body","handleClick"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { atob } from 'js-base64';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport ErrorScreen from '../tempscreens/ErrorScreen';\nimport PostsApi from '../../api/PostsApi';\nimport ChatApi from '../../api/ChatApi';\n\nfunction SinglePost() {\n  const tokenKey = window.sessionStorage.getItem('_token');\n  const { state } = useLocation();\n  const passedPost = state === undefined ? null : state.post;\n  const [post, setPost] = useState(passedPost);\n  const history = useHistory();\n\n  const handleClaim = () => {\n    const setClaimed = async () => {\n      try {\n        const response = await PostsApi.updatePost({ ...post, claimed: !post.claimed });\n        setPost(response.data);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    setClaimed();\n  };\n\n  const messageHandler = () => {\n    const createOrDirect = async () => {\n      try {\n        const response = await ChatApi.createThread(post.email, {});\n        console.log(response);\n        history.push(`/chat/${response.data.id}`);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    createOrDirect();\n  };\n  try {\n    const isPoster = atob(tokenKey).includes(post.email);\n    return (\n /*      <div className=\"card single-card\">\n        <div className=\"card-header\">{post.claimed ? 'Claimed' : 'Available'}</div>\n        <img className=\"card-img-top\" src={post.imageUrl} alt=\"\" />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{post.title}</h5>\n          <p>{post.date}</p>\n          <p className=\"card-text\">{post.body}</p>\n\n          <div className=\"bottom-of-card\">\n            {isPoster ? (\n              <button onClick={handleClaim} type=\"button\" className=\"btn btn-warning\">\n                {post.claimed ? 'Set Available' : 'Set Claimed'}\n              </button>\n            ) : null}\n            {isPoster ? null : (\n              <button type=\"button\" onClick={messageHandler} className=\"btn btn-primary\">\n                Message Poster\n              </button>\n            )}\n          </div>\n        </div>\n      </div> */\n\n      <div className=\"col-md-3 col-sm-6\">\n      <div className=\"product-grid4\">\n          <div className=\"product-image4\">\n              <a href=\"#\">\n                  <img className={post.claimed ? 'claimed pic-1' : 'pic-1'}\n                      src={post.imageUrl} />\n                      <img className={post.claimed ? 'claimed pic-2' : 'pic-2'}\n                          src={post.imageUrl} />\n              </a>\n          </div>\n          <div className=\"product-content\">\n              <h3 className=\"title\"><a href=\"#\">{post.title}</a></h3>\n              <div className=\"info\">\n                  <span>{post.date}</span><br/>\n                  <span>{post.body}</span>\n              </div>\n              <div className=\"bottom-of-card\">\n              {isPoster ? (\n                <button onClick={handleClick} type=\"button\" className=\"btn btn-warning\">\n                  {post.claimed ? 'Set Available' : 'Set Claimed'}\n                </button>\n              ) : null}\n              \n            </div>\n          </div>\n      </div>\n      </div>\n\n    );\n  } catch (e) {\n    console.log(e);\n    return <ErrorScreen />;\n  }\n}\nexport default SinglePost;\n"]},"metadata":{},"sourceType":"module"}